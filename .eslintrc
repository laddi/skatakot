// -*- mode: json; js-indent-level: 2; -*-

{
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true,
    "meteor": true,
    "jquery": true,
    "es6": true,
    "mongo": true
  },
  "ecmaFeatures": {
    "arrowFunctions": true,
    "blockBindings": true,
    "classes": true,
    "defaultParams": true,
    "destructuring": true,
    "forOf": true,
    "generators": false,
    "modules": true,
    "objectLiteralComputedProperties": true,
    "objectLiteralDuplicateProperties": false,
    "objectLiteralShorthandMethods": true,
    "objectLiteralShorthandProperties": true,
    "spread": true,
    "superInFunctions": true,
    "templateStrings": true,
    "jsx": true
  },
  "globals": {
	"_": true,
	"$": true,
	"d3": true
  },
  "rules": {
/**
 * Strict mode
 */
    // babel inserts "use strict"; for us
    // http://eslint.org/docs/rules/strict
    "strict": [2, "never"],

/**
 * ES6
 */
    "no-var": 0,

/**
 * Variables
 */
	"no-catch-shadow": 2,
    "no-delete-var": 2,
	"no-label-var": 2,
    "no-shadow": 2,
    "no-shadow-restricted-names": 2,
	"no-undef": 0,
    "no-unused-vars": [2, {
      "vars": "local",
      "args": "after-used"
    }],
    "no-use-before-define": [2, "nofunc"],

/**
 * Possible errors
 */
    "comma-dangle": [0, "always-multiline"],
    "no-cond-assign": [2, "except-parens"],
    "no-console": 0,
    "no-debugger": 1,
    "no-alert": 0,
    "no-constant-condition": 1,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty": 2,
    "no-ex-assign": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-semi": 2,
    "no-func-assign": 2,
    "no-inner-declarations": 2,
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
	"no-negated-in-lhs": 2,
    "no-obj-calls": 2,
	"no-regex-spaces": 2,
    "quote-props": 0,
    "no-sparse-arrays": 2,
	"no-unexpected-multiline": 2,
    "no-unreachable": 2,
    "use-isnan": 2,
	"valid-typeof": 2,

/**
 * Best practices
 */
    "block-scoped-var": 0,
    "consistent-return": 2,
    "curly": [2, "multi-line"],
    "default-case": 2,
	"dot-location": [2, "property"],
	"dot-notation": [2, {
	  "allowKeywords": true,
	  "allowPattern": "^([A-Z]|[a-z]\\w*(_\\w+)+$)",
	}],
    "eqeqeq": 2,
    "guard-for-in": 2,
    "no-caller": 2,
	"no-empty-label": 2,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-implied-eval": 2,
	"no-invalid-this": 0,
    "no-lone-blocks": 2,
    "no-loop-func": 2,
	"no-multi-spaces": 2,
    "no-multi-str": 2,
    "no-native-reassign": 2,
    "no-new": 0,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-param-reassign": 0,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-return-assign": 2,
    "no-script-url": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
	"no-unused-expressions": 2,
	"no-useless-call": 2,
	"no-useless-concat": 0,
	"no-warning-comments": [0, {
	  "terms": ["todo", "fixme", "xxx"],
	  "location": "start",
	}],
    "no-with": 2,
    "radix": 2,
    "vars-on-top": 0,
    "wrap-iife": [2, "outside"],
    "yoda": 2,

/**
 * Style
 */
    "brace-style": [1, "1tbs", {
      "allowSingleLine": true
    }],
    "camelcase": [2, {
      "properties": "never"
    }],
    "comma-spacing": [2, {
      "before": false,
      "after": true
    }],
    "comma-style": [2, "last"],
    "eol-last": 2,
    "func-names": 0,
    "func-style": [0, "declaration"],
    "indent": [1, "tab"],
    "key-spacing": [2, {
        "beforeColon": false,
        "afterColon": true
    }],
	"linebreak-style": 2,
    "max-len": [2, 9999, 4],
    "new-cap": [0, {
      "newIsCap": true
    }],
	"new-parens": 2,
    "no-array-constructor": 2,
	"no-lonely-if": 2,
	"no-mixed-spaces-and-tabs": [2, "smart-tabs"],
    "no-multiple-empty-lines": [2, {
      "max": 2
    }],
    "no-nested-ternary": 0,
    "no-new-object": 2,
    "no-spaced-func": 2,
    "no-trailing-spaces": 2,
    "no-wrap-func": 0,
    "no-underscore-dangle": 0,
    "one-var": [2, {
	  // Exactly one declaration for uninitialized variables per function (var) or block (let or const)
      "uninitialized": "always",
	  // Exactly one declarator per initialized variable declaration per function (var) or block (let or const)
      "initialized": "never",
    }],
    "padded-blocks": 0,
    "quotes": [1, "single"],
    "semi": [2, "always"],
    "semi-spacing": [2, {
      "before": false,
      "after": true
    }],
    "space-after-keywords": 2,
    "space-before-blocks": 2,
    "space-before-function-paren": [2, "never"],
    "space-infix-ops": 2,
    "space-return-throw-case": 2,
    "spaced-comment": 2,
  }
}
